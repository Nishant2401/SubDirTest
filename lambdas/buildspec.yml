version: 0.2
phases:
  install:
    runtime-versions:
      python: 3.8

  pre_build:
    commands:
    # Updating packages on container, and checking home path and python version for logging purposes.
      - pip3 --version
      - apt-get -qq update
      - apt-get -y install python3-pip
      - pip3 install --upgrade pip3
      - pip3 --version
      - echo $HOME
      - which python3
      - python3 --version

  build:
    commands:
    # Installing AWSCLI, AWS SAM CLI, PyTest, and Requests package
      - pip3 install awscli -qq
      - pip3 install pytest -qq
      - pip3 install pytest-cov -qq
      # - pip3 install --target lambdas/process-modem-data/lambda-code urllib3
      # - pip3 install --target lambdas/create-RTRADIO-msg/lambda-code urllib3
      # - ls -l lambdas/process-modem-data/lambda-code
      # - ls -l lambdas/create-RTRADIO-msg/lambda-code
      - pwd
      - ls -l
      - pip3 install --target CEI/lambdas/cei-configuration/lambda-code urllib3
      - ls -l CEI/lambdas/cei-configuration/lambda-code
      - pip3 install --target CEI/lambdas/cei-configuration/lambda-code requests
      - ls -l CEI/lambdas/cei-configuration/lambda-code
      - ls -l lambdas/PipelineTestLambda1/LambdaCode

    # Executing SAM template
      - aws cloudformation package --template-file lambdas/samTemplate.yml --s3-bucket $S3_Bucket --output-template-file outputSamTemplate.yaml
      
    # Placeholder for commands to launch pytest for future Lambdas - Lambda1 and Lambda2  
      - python3 -B -m pytest -v lambdas/PipelineTestLambda1/Tests/test_handler.py --cov=.
      - python3 -B -m pytest -v lambdas/PipelineTestLambda2/Tests/ --cov=.

artifacts:
  type: zip
  files:
    - samTemplate.yaml
    - outputSamTemplate.yaml